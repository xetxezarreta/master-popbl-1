global
  log /dev/log local0
  log localhost local1 notice
  maxconn 2000
  daemon
  tune.ssl.default-dh-param 2048

defaults
  log     global
  mode    http
  option  httplog
  option  dontlognull
  retries 3
  timeout connect 5000
  timeout client  50000
  timeout server  50000

frontend api_gateway
  bind *:80
  bind *:${HAPROXY_PORT} ssl crt /cert_haproxy/haproxy.pem
  redirect scheme https if !{ ssl_fc }
  acl PATH_auth path_beg -i beg /auth
  acl PATH_order path_beg -i beg /order
  acl PATH_payment path_beg -i beg /payment
  acl PATH_machine path_beg -i beg /machine
  acl PATH_delivery path_beg -i beg /delivery
  acl PATH_logger path_beg -i beg /logger
#  acl PATH_warehouse path_beg -i beg /warehouse

  use_backend auth_service if PATH_auth
  use_backend order_service if PATH_order
  use_backend payment_service if PATH_payment
  use_backend machine_service if PATH_machine
  use_backend delivery_service if PATH_delivery
  use_backend logger_service if PATH_logger
#  use_backend warehouse_service if PATH_warehouse

backend auth_service
  #server auth1 ${AUTH_IP}:${AUTH_PORT} check
  server-template authapp 1 _auth._tcp.service.consul resolvers consul    resolve-opts allow-dup-ip resolve-prefer ipv4 check

backend order_service
  #server order1 ${ORDER_IP}:${ORDER_PORT} check
  server-template orderapp 1 _order._tcp.service.consul resolvers consul    resolve-opts allow-dup-ip resolve-prefer ipv4 check

backend payment_service
  #server payment1 ${PAYMENT_IP}:${PAYMENT_PORT} check
  server-template paymentapp 1 _payment._tcp.service.consul resolvers consul    resolve-opts allow-dup-ip resolve-prefer ipv4 check

backend machine_service
  #server machine1 ${MACHINE_IP}:${MACHINE_PORT} check
  server-template machineapp 1 _machine._tcp.service.consul resolvers consul    resolve-opts allow-dup-ip resolve-prefer ipv4 check

backend delivery_service
  #server payment1 ${DELIVERY_IP}:${DELIVERY_PORT} check
  server-template deliveryapp 1 _delivery._tcp.service.consul resolvers consul    resolve-opts allow-dup-ip resolve-prefer ipv4 check

backend logger_service
  server-template loggerapp 1 _logger._tcp.service.consul resolvers consul    resolve-opts allow-dup-ip resolve-prefer ipv4 check

#backend warehouse_service
#  server-template warehouseapp 1 _warehouse._tcp.service.consul resolvers consul    resolve-opts allow-dup-ip resolve-prefer ipv4 check

resolvers consul
  nameserver consul ${CONSUL_HOST}:8600
  accepted_payload_size 8192
  hold valid 5s

listen stats
  bind :${HAPROXY_STATS_PORT}
  stats enable
  stats uri /
  stats hide-version
  stats auth admin:admin

# https://www.haproxy.com/blog/using-haproxy-as-an-api-gateway-part-1/
# https://www.haproxy.com/blog/using-haproxy-as-an-api-gateway-part-2-authentication/
# https://www.haproxy.com/blog/using-haproxy-as-an-api-gateway-part-3-health-checks/
